/* USER 테이블 */
CREATE TABLE SERVICE_USER(
  USERID VARCHAR2(15) PRIMARY KEY,
  NAME VARCHAR2(15) NOT NULL,
  USER_PW VARCHAR2(30) NOT NULL,
  EMAIL VARCHAR2(100) NOT NULL,
  MILEAGE NUMBER(8) DEFAULT '0' NOT NULL,
  ADDR VARCHAR2(100) NOT NULL,
  REG_DATE DATE DEFAULT SYSDATE NOT NULL
);



/* 부동산 매물 저장테이블 */
CREATE TABLE PROPERTIES(
  PROPERTY_ID NUMBER(10) DEFAULT '1' PRIMARY KEY,
  SELLER_ID VARCHAR2(15) CONSTRAINT SELLECR_ID_FK REFERENCES SERVICE_USER(USERID),
  ADDR VARCHAR2(100) NOT NULL,
  PRICE NUMBER(15) NOT NULL,
  DESCRIPT VARCHAR2(200) NOT NULL,
  PROPERTY_TYPE VARCHAR2(10) NOT NULL,
  TOTAL_SIZE VARCHAR2(10) NOT NULL,
  REG_DATE DATE DEFAULT SYSDATE NOT NULL
);

-- 이미지를 저장할 테이블 생성
CREATE TABLE PropertyImages (
    IMAGE_ID INT PRIMARY KEY,
    PROPERTY_ID INT,
    IMAGE BLOB, -- 이미지를 BLOB 데이터 유형으로 저장
    CONSTRAINT fk_property_image FOREIGN KEY (PROPERTY_ID) REFERENCES PROPERTIES(PROPERTY_ID)
);

-- 매물 테이블에 외래 키 추가
ALTER TABLE PROPERTIES ADD CONSTRAINT fk_property_image FOREIGN KEY (PROPERTY_ID) REFERENCES PropertyImages(PROPERTY_ID);

SELECT * FROM PROPERTIES;

-- 거래 테이블 추가
CREATE TABLE TRANSACTIONS(
  TRANSACTION_ID NUMBER(10) PRIMARY KEY,
  BUYER_ID VARCHAR2(15) CONSTRAINT BUYER_ID_FK REFERENCES SERVICE_USER(USERID),
  PROPERTY_ID NUMBER(10) CONSTRAINT PROPERTY_ID_FK REFERENCES PROPERTIES(PROPERTY_ID),
  TRANSACTION_DATE DATE DEFAULT SYSDATE NOT NULL,
  TRANSACTION_AMOUNT NUMBER(15) NOT NULL,
  TRANSACTION_STATUS VARCHAR2(10) NOT NULL
);

-- 블록체인 테이블 생성
CREATE TABLE BLOCKCHAIN(
    BLOCK_ID NUMBER(20) PRIMARY KEY,
    PREVIOUS_BLOCK_HASH VARCHAR2(200) NOT NULL,
    BLOCK_DATA VARCHAR2(200) NOT NULL,
    BLOCK_TIMESTAMP DATE DEFAULT SYSDATE NOT NULL,
    NONCE NUMBER(20) NOT NULL
);

-- 키 테이블
CREATE TABLE KEY_TABLE(
    KEY_ID NUMBER(15) PRIMARY KEY,
    USERID VARCHAR2(15) CONSTRAINT KEY_USERID_FK REFERENCES SERVICE_USER(USERID),
    PUBLIC_KEY VARCHAR2(100) NOT NULL,
    PRIVATE_KEY VARCHAR2(100) NOT NULL
);